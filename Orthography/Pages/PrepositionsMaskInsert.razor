@*https://www.w3schools.com/tags/tag_textarea.asp*@
@page "/prepositions/insert"

<textarea class="form-group col-12" rows="10" @bind="@input" />
<button type="button" class="btn btn-success mt-1" style="min-height: 30pt; min-width: 100px" @onclick="Save">Save</button>

@code {
    private const string ConnectionString = @"Data Source=192.168.1.3\SQLSERVER;Initial Catalog=Orthography;Persist Security Info=True;User ID=sa;Password=developer";
    private DataContext dataContext;
    private string input;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        dataContext = new DataContext(ConnectionString);
    }

    private void Save()
    {
        if (string.IsNullOrWhiteSpace(input)) return;
        var lines = input.Split('\n').Select(p => p.Trim()).Where(p => !string.IsNullOrWhiteSpace(p));
        foreach (var line in lines)
        {
            var cols = line.Split('\t').Select(p => p.ToLower().Trim()).Select(p => string.IsNullOrWhiteSpace(p) ? "0" : p).ToList();
            if (cols.Count == 0) continue;
            while (cols.Count < 10) cols.Add("0");
            if (cols.Count < 10) continue;
            var bitmaskArray = new bool[9];
            for (var i = 1; i <= 9; ++i)
            {
                if (!int.TryParse(cols[i], out var bit)) bit = 0;
                bitmaskArray[i - 1] = bit > 0;
            }

            var word = cols[0];
            var translation = cols.Count > 10 ? cols[10] : null;
            var bitmask = ArrayToBitmask(bitmaskArray);
            var existing = dataContext.Words.FirstOrDefault(p => p.Value.ToLower() == word);
            if (existing == null)
            {
                dataContext.Words.Add(new Word
                {
                    Value = word,
                    Translation = translation,
                    PrepositionsMask = bitmask
                });
            }
            else
            {
                existing.PrepositionsMask = bitmask;
                existing.Translation = existing.Translation == null ? translation : existing.Translation;
            }
            dataContext.SaveChanges();
        }
    }

    private int ArrayToBitmask(bool[] array)
    {
        var bitmask = 0;
        for (var i = array.Length - 1; i >= 0; --i)
        {
            bitmask |= array[i] ? 1 : 0;
            if (i > 0) bitmask <<= 1;
        }
        return bitmask;
    }
}
